{"version":3,"sources":["categories.js","Components/Header/header.jsx","Components/Definitions/Definitions.jsx","Components/Random/Random.jsx","index.jsx"],"names":["categories","value","label","Header","category","setcategory","word","setword","id","TextField","onChange","e","target","select","language","map","option","MenuItem","Definitions","meanings","flag","mean","item","definitions","def","definition","example","style","backgroundColor","width","synonyms","length","s","Random","handleClick","a","axios","get","data","console","log","ColorButton","styled","Button","theme","color","grey","display","flexDirection","marginBottom","variant","onClick","Main","useState","setmeanings","setflag","dictionaryApi","apidata","useEffect","Container","maxWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ec43f90.chunk.js","sourcesContent":["const categories = [\r\n  { value: \"English\", label: \"en\" },\r\n  { value: \"Hindi\", label: \"hi\" },\r\n  { value: \"Spanish\", label: \"es\" },\r\n  { value: \"French\", label: \"fr\" },\r\n  { value: \"Japanese\", label: \"ja\" },\r\n  { value: \"Russian\", label: \"ru\" },\r\n  { value: \"German\", label: \"de\" },\r\n  { value: \"Italian\", label: \"it\" },\r\n  { value: \"Korean\", label: \"ko\" },\r\n  { value: \"Brazilian Portuguese\", label: \"pt-BR\" },\r\n  { value: \"Arabic\", label: \"ar\" },\r\n  { value: \"Turkish\", label: \"tr\" },\r\n];\r\n\r\nexport default categories;\r\n","import React from \"react\";\r\nimport \"./header.css\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport categories from \"../../categories\";\r\n\r\nconst Header = ({ category, setcategory, word, setword }) => {\r\n  const handleChange = (language) => {\r\n    setcategory(language);\r\n    setword(\"\");\r\n  };\r\n  return (\r\n    <div id=\"header\">\r\n      <div id=\"title\">\r\n        <h1>No Pun Intended</h1>\r\n      </div>\r\n      <div id=\"inputs\">\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Search for a word\"\r\n          value={word}\r\n          onChange={(e) => setword(e.target.value)}\r\n        />\r\n        <TextField\r\n          id=\"select\"\r\n          select\r\n          label=\"Language\"\r\n          value={category}\r\n          onChange={(e) => handleChange(e.target.value)}\r\n        >\r\n          {categories.map((option) => (\r\n            <MenuItem key={option.label} value={option.label}>\r\n              {option.value}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Definitions.css\";\r\n\r\nconst Definitions = ({ word, meanings, flag }) => {\r\n  return (\r\n    <div id=\"meanings\">\r\n      {flag ? (\r\n        <center>\r\n          <span id=\"subtitle\">No meanings found!</span>\r\n        </center>\r\n      ) : word === \"\" ? (\r\n        <center>\r\n          <span id=\"subtitle\">Start by typing a word in search</span>\r\n        </center>\r\n      ) : (\r\n        meanings.map((mean) =>\r\n          mean.meanings.map((item) =>\r\n            item.definitions.map((def) => (\r\n              <div id=\"singleMean\">\r\n                <div id=\"def\">{def.definition}</div>\r\n                {def.example && (\r\n                  <span>\r\n                    <hr style={{ backgroundColor: \"black\", width: \"100%\" }} />\r\n                    <h2>Example:</h2> {def.example}\r\n                    <br />\r\n                  </span>\r\n                )}\r\n                {def.synonyms.length ? (\r\n                  <span>\r\n                    <h2>Synonyms:</h2> {def.synonyms.map((s) => `${s}, `)}\r\n                  </span>\r\n                ) : null}\r\n              </div>\r\n            ))\r\n          )\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Definitions;\r\n","import React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { grey } from \"@mui/material/colors\";\r\nimport axios from \"axios\";\r\n\r\nconst Random = ({ setword }) => {\r\n  const handleClick = async () => {\r\n    try {\r\n      const data = await axios.get(\r\n        \"https://random-word-api.herokuapp.com/word\"\r\n      );\r\n      setword(data.data[0]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const ColorButton = styled(Button)(({ theme }) => ({\r\n    color: \"white\",\r\n    backgroundColor: grey[900],\r\n    \"&:hover\": {\r\n      backgroundColor: grey[700],\r\n    },\r\n  }));\r\n  return (\r\n    <div\r\n      id=\"randombutton\"\r\n      style={{ display: \"flex\", flexDirection: \"column\", marginBottom: \"5vh\" }}\r\n    >\r\n      <center>\r\n        <ColorButton variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n          Random Word\r\n        </ColorButton>\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Random;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Header from \"./Components/Header/header\";\r\nimport \"./style.css\";\r\nimport \"./reset.css\";\r\nimport Definitions from \"./Components/Definitions/Definitions\";\r\nimport axios from \"axios\";\r\nimport Random from \"./Components/Random/Random\";\r\n\r\nconst Main = () => {\r\n  const [word, setword] = useState(\"\");\r\n  const [meanings, setmeanings] = useState([]);\r\n  const [category, setcategory] = useState(\"en\");\r\n  const [flag, setflag] = useState(0);\r\n  const dictionaryApi = async () => {\r\n    try {\r\n      if (word !== \"\") {\r\n        const apidata = await axios.get(\r\n          `https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`\r\n        );\r\n        setmeanings(apidata.data);\r\n        setflag(0);\r\n        console.log(apidata);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setmeanings([]);\r\n      setflag(1);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    dictionaryApi();\r\n    // eslint-disable-next-line\r\n  }, [word, category, flag]);\r\n  return (\r\n    <div id=\"main\">\r\n      <div id=\"background\"></div>\r\n      <Container maxWidth=\"md\" id=\"container\">\r\n        <Header\r\n          category={category}\r\n          setcategory={setcategory}\r\n          word={word}\r\n          setword={setword}\r\n        />\r\n        <Random setword={setword} />\r\n        {meanings && (\r\n          <Definitions word={word} meanings={meanings} flag={flag} />\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}